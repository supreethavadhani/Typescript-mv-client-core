import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../mv-textbox/component";
import * as i3 from "../mv-dropdown/component";
import * as i4 from "../mv-textarea/component";
/**
 * The componenet unpacks the formdata (input)
 * and renders the all the fields of the form.
 * The component uses Metadev (Mv) components to
 * render the fields
 * @formData - FormData
 */
export class MvFormGeneratorComponent {
    ngOnInit() {
        this.form = this.formData?.form;
        this.fields = this.formData?.form.fields;
    }
}
MvFormGeneratorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.1.3", ngImport: i0, type: MvFormGeneratorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
MvFormGeneratorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.1.3", type: MvFormGeneratorComponent, selector: "app-mv-form-generator", inputs: { formData: "formData" }, ngImport: i0, template: "<div class=\"col-md-12\" style=\"margin: 0 auto;\">\r\n  <div *ngFor=\"let field of fields | keyvalue\" [ngSwitch]=\"field.value.controlType\">\r\n    <app-mv-textbox class=\"col\" *ngSwitchCase=\"'Input'\" [field]=\"form[field.key]\" [formData]=\"formData\"></app-mv-textbox>\r\n    <app-mv-textarea class=\"col\" *ngSwitchCase=\"'Textarea'\" [field]=\"form[field.key]\" [formData]=\"formData\"></app-mv-textarea>\r\n    <app-mv-dropdown class=\"col\" *ngSwitchCase=\"'Dropdown'\" [field]=\"form[field.key]\" [formData]=\"formData\"></app-mv-dropdown>\r\n  </div>\r\n</div>\r\n", dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "component", type: i2.MvTextboxComponent, selector: "app-mv-textbox", inputs: ["field", "formData", "type"], outputs: ["valueChange"] }, { kind: "component", type: i3.MvDropDownComponent, selector: "app-mv-dropdown", inputs: ["field", "formData", "type"], outputs: ["valueChange", "changeListener"] }, { kind: "component", type: i4.MvTextareaComponent, selector: "app-mv-textarea", inputs: ["field", "formData", "type"], outputs: ["valueChange"] }, { kind: "pipe", type: i1.KeyValuePipe, name: "keyvalue" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.1.3", ngImport: i0, type: MvFormGeneratorComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-mv-form-generator', template: "<div class=\"col-md-12\" style=\"margin: 0 auto;\">\r\n  <div *ngFor=\"let field of fields | keyvalue\" [ngSwitch]=\"field.value.controlType\">\r\n    <app-mv-textbox class=\"col\" *ngSwitchCase=\"'Input'\" [field]=\"form[field.key]\" [formData]=\"formData\"></app-mv-textbox>\r\n    <app-mv-textarea class=\"col\" *ngSwitchCase=\"'Textarea'\" [field]=\"form[field.key]\" [formData]=\"formData\"></app-mv-textarea>\r\n    <app-mv-dropdown class=\"col\" *ngSwitchCase=\"'Dropdown'\" [field]=\"form[field.key]\" [formData]=\"formData\"></app-mv-dropdown>\r\n  </div>\r\n</div>\r\n" }]
        }], propDecorators: { formData: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbXYtY2xpZW50LWNvcmUvc3JjL212LWNvcmUvbXYtY29tcG9uZW50cy9tdi1mb3JtLWdlbmVyYXRvci9jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9tdi1jbGllbnQtY29yZS9zcmMvbXYtY29yZS9tdi1jb21wb25lbnRzL212LWZvcm0tZ2VuZXJhdG9yL2NvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTixTQUFTLEVBQ1QsS0FBSyxFQUVMLE1BQU0sZUFBZSxDQUFDOzs7Ozs7QUFhdkI7Ozs7OztHQU1HO0FBRUgsTUFBTSxPQUFPLHdCQUF3QjtJQU9wQyxRQUFRO1FBQ1AsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQztRQUNoQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUMxQyxDQUFDOztxSEFWVyx3QkFBd0I7eUdBQXhCLHdCQUF3QiwrRkN6QnJDLG9rQkFPQTsyRkRrQmEsd0JBQXdCO2tCQWRwQyxTQUFTOytCQUNDLHVCQUF1Qjs4QkFjakIsUUFBUTtzQkFBdkIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcblx0Q29tcG9uZW50LFxyXG5cdElucHV0LFxyXG5cdE9uSW5pdFxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge1xyXG5cdEZvcm1Db250cm9sXHJcbn0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBGb3JtIH0gZnJvbSAnLi4vLi4vbXYtZm9ybS1jb3JlL2Zvcm0nO1xyXG5pbXBvcnQgeyBGb3JtRGF0YSB9IGZyb20gJy4uLy4uL212LWZvcm0tY29yZS9mb3JtRGF0YSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuXHRzZWxlY3RvcjogJ2FwcC1tdi1mb3JtLWdlbmVyYXRvcicsXHJcblx0dGVtcGxhdGVVcmw6ICcuL2NvbXBvbmVudC5odG1sJyxcclxuXHRzdHlsZVVybHM6IFtdXHJcbn0pXHJcblxyXG4vKipcclxuICogVGhlIGNvbXBvbmVuZXQgdW5wYWNrcyB0aGUgZm9ybWRhdGEgKGlucHV0KVxyXG4gKiBhbmQgcmVuZGVycyB0aGUgYWxsIHRoZSBmaWVsZHMgb2YgdGhlIGZvcm0uXHJcbiAqIFRoZSBjb21wb25lbnQgdXNlcyBNZXRhZGV2IChNdikgY29tcG9uZW50cyB0b1xyXG4gKiByZW5kZXIgdGhlIGZpZWxkc1xyXG4gKiBAZm9ybURhdGEgLSBGb3JtRGF0YSBcclxuICovXHJcblxyXG5leHBvcnQgY2xhc3MgTXZGb3JtR2VuZXJhdG9yQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHRASW5wdXQoKSBwdWJsaWMgZm9ybURhdGE6IEZvcm1EYXRhIHwgdW5kZWZpbmVkO1xyXG5cclxuXHRmaWVsZHM6IGFueTtcclxuXHRmb3JtOiBGb3JtIHwgdW5kZWZpbmVkO1xyXG5cdGNvbnRyb2w6IEZvcm1Db250cm9sIHwgdW5kZWZpbmVkO1xyXG5cclxuXHRuZ09uSW5pdCgpIHtcclxuXHRcdHRoaXMuZm9ybSA9IHRoaXMuZm9ybURhdGE/LmZvcm07XHJcblx0XHR0aGlzLmZpZWxkcyA9IHRoaXMuZm9ybURhdGE/LmZvcm0uZmllbGRzO1xyXG5cdH1cclxufSIsIjxkaXYgY2xhc3M9XCJjb2wtbWQtMTJcIiBzdHlsZT1cIm1hcmdpbjogMCBhdXRvO1wiPlxyXG4gIDxkaXYgKm5nRm9yPVwibGV0IGZpZWxkIG9mIGZpZWxkcyB8IGtleXZhbHVlXCIgW25nU3dpdGNoXT1cImZpZWxkLnZhbHVlLmNvbnRyb2xUeXBlXCI+XHJcbiAgICA8YXBwLW12LXRleHRib3ggY2xhc3M9XCJjb2xcIiAqbmdTd2l0Y2hDYXNlPVwiJ0lucHV0J1wiIFtmaWVsZF09XCJmb3JtW2ZpZWxkLmtleV1cIiBbZm9ybURhdGFdPVwiZm9ybURhdGFcIj48L2FwcC1tdi10ZXh0Ym94PlxyXG4gICAgPGFwcC1tdi10ZXh0YXJlYSBjbGFzcz1cImNvbFwiICpuZ1N3aXRjaENhc2U9XCInVGV4dGFyZWEnXCIgW2ZpZWxkXT1cImZvcm1bZmllbGQua2V5XVwiIFtmb3JtRGF0YV09XCJmb3JtRGF0YVwiPjwvYXBwLW12LXRleHRhcmVhPlxyXG4gICAgPGFwcC1tdi1kcm9wZG93biBjbGFzcz1cImNvbFwiICpuZ1N3aXRjaENhc2U9XCInRHJvcGRvd24nXCIgW2ZpZWxkXT1cImZvcm1bZmllbGQua2V5XVwiIFtmb3JtRGF0YV09XCJmb3JtRGF0YVwiPjwvYXBwLW12LWRyb3Bkb3duPlxyXG4gIDwvZGl2PlxyXG48L2Rpdj5cclxuIl19