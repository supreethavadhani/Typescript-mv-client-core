import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/material/card";
import * as i3 from "../mv-textbox/component";
import * as i4 from "../mv-dropdown/component";
import * as i5 from "../mv-textarea/component";
/**
 * The componenet unpacks the formdata (input)
 * and renders the all the fields of the form.
 * The component uses Metadev (Mv) components to
 * render the fields
 * @formData - FormData
 */
export class MvFormGeneratorComponent {
    ngOnInit() {
        this.form = this.formData?.form;
        this.fields = this.formData?.form.fields;
    }
}
MvFormGeneratorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.1.3", ngImport: i0, type: MvFormGeneratorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
MvFormGeneratorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.1.3", type: MvFormGeneratorComponent, selector: "app-mv-form-generator", inputs: { formData: "formData" }, ngImport: i0, template: "<mat-card class=\"col-md-12\">\r\n  <div *ngFor=\"let field of fields | keyvalue\" [ngSwitch]=\"field.value.controlType\">\r\n    <app-mv-textbox class=\"col\" *ngSwitchCase=\"'Input'\" [field]=\"form[field.key]\" [formData]=\"formData\"></app-mv-textbox>\r\n    <app-mv-textarea class=\"col\" *ngSwitchCase=\"'Textarea'\" [field]=\"form[field.key]\" [formData]=\"formData\"></app-mv-textarea>\r\n    <app-mv-dropdown class=\"col\" *ngSwitchCase=\"'Dropdown'\" [field]=\"form[field.key]\" [formData]=\"formData\"></app-mv-dropdown>\r\n  </div>\r\n</mat-card>\r\n", dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "component", type: i2.MatCard, selector: "mat-card", exportAs: ["matCard"] }, { kind: "component", type: i3.MvTextboxComponent, selector: "app-mv-textbox", inputs: ["field", "formData", "type"], outputs: ["valueChange"] }, { kind: "component", type: i4.MvDropDownComponent, selector: "app-mv-dropdown", inputs: ["field", "formData", "type"], outputs: ["valueChange", "changeListener"] }, { kind: "component", type: i5.MvTextareaComponent, selector: "app-mv-textarea", inputs: ["field", "formData", "type"], outputs: ["valueChange"] }, { kind: "pipe", type: i1.KeyValuePipe, name: "keyvalue" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.1.3", ngImport: i0, type: MvFormGeneratorComponent, decorators: [{
            type: Component,
            args: [{ selector: 'app-mv-form-generator', template: "<mat-card class=\"col-md-12\">\r\n  <div *ngFor=\"let field of fields | keyvalue\" [ngSwitch]=\"field.value.controlType\">\r\n    <app-mv-textbox class=\"col\" *ngSwitchCase=\"'Input'\" [field]=\"form[field.key]\" [formData]=\"formData\"></app-mv-textbox>\r\n    <app-mv-textarea class=\"col\" *ngSwitchCase=\"'Textarea'\" [field]=\"form[field.key]\" [formData]=\"formData\"></app-mv-textarea>\r\n    <app-mv-dropdown class=\"col\" *ngSwitchCase=\"'Dropdown'\" [field]=\"form[field.key]\" [formData]=\"formData\"></app-mv-dropdown>\r\n  </div>\r\n</mat-card>\r\n" }]
        }], propDecorators: { formData: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbXYtY2xpZW50LWNvcmUvc3JjL212LWNvcmUvbXYtY29tcG9uZW50cy9tdi1mb3JtLWdlbmVyYXRvci9jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9tdi1jbGllbnQtY29yZS9zcmMvbXYtY29yZS9tdi1jb21wb25lbnRzL212LWZvcm0tZ2VuZXJhdG9yL2NvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTixTQUFTLEVBQ1QsS0FBSyxFQUVMLE1BQU0sZUFBZSxDQUFDOzs7Ozs7O0FBYXZCOzs7Ozs7R0FNRztBQUVILE1BQU0sT0FBTyx3QkFBd0I7SUFPcEMsUUFBUTtRQUNQLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUM7UUFDaEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDMUMsQ0FBQzs7cUhBVlcsd0JBQXdCO3lHQUF4Qix3QkFBd0IsK0ZDekJyQyxvakJBT0E7MkZEa0JhLHdCQUF3QjtrQkFkcEMsU0FBUzsrQkFDQyx1QkFBdUI7OEJBY2pCLFFBQVE7c0JBQXZCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG5cdENvbXBvbmVudCxcclxuXHRJbnB1dCxcclxuXHRPbkluaXRcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtcclxuXHRGb3JtQ29udHJvbFxyXG59IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgRm9ybSB9IGZyb20gJy4uLy4uL212LWZvcm0tY29yZS9mb3JtJztcclxuaW1wb3J0IHsgRm9ybURhdGEgfSBmcm9tICcuLi8uLi9tdi1mb3JtLWNvcmUvZm9ybURhdGEnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcblx0c2VsZWN0b3I6ICdhcHAtbXYtZm9ybS1nZW5lcmF0b3InLFxyXG5cdHRlbXBsYXRlVXJsOiAnLi9jb21wb25lbnQuaHRtbCcsXHJcblx0c3R5bGVVcmxzOiBbXVxyXG59KVxyXG5cclxuLyoqXHJcbiAqIFRoZSBjb21wb25lbmV0IHVucGFja3MgdGhlIGZvcm1kYXRhIChpbnB1dClcclxuICogYW5kIHJlbmRlcnMgdGhlIGFsbCB0aGUgZmllbGRzIG9mIHRoZSBmb3JtLlxyXG4gKiBUaGUgY29tcG9uZW50IHVzZXMgTWV0YWRldiAoTXYpIGNvbXBvbmVudHMgdG9cclxuICogcmVuZGVyIHRoZSBmaWVsZHNcclxuICogQGZvcm1EYXRhIC0gRm9ybURhdGEgXHJcbiAqL1xyXG5cclxuZXhwb3J0IGNsYXNzIE12Rm9ybUdlbmVyYXRvckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblx0QElucHV0KCkgcHVibGljIGZvcm1EYXRhOiBGb3JtRGF0YSB8IHVuZGVmaW5lZDtcclxuXHJcblx0ZmllbGRzOiBhbnk7XHJcblx0Zm9ybTogRm9ybSB8IHVuZGVmaW5lZDtcclxuXHRjb250cm9sOiBGb3JtQ29udHJvbCB8IHVuZGVmaW5lZDtcclxuXHJcblx0bmdPbkluaXQoKSB7XHJcblx0XHR0aGlzLmZvcm0gPSB0aGlzLmZvcm1EYXRhPy5mb3JtO1xyXG5cdFx0dGhpcy5maWVsZHMgPSB0aGlzLmZvcm1EYXRhPy5mb3JtLmZpZWxkcztcclxuXHR9XHJcbn0iLCI8bWF0LWNhcmQgY2xhc3M9XCJjb2wtbWQtMTJcIj5cclxuICA8ZGl2ICpuZ0Zvcj1cImxldCBmaWVsZCBvZiBmaWVsZHMgfCBrZXl2YWx1ZVwiIFtuZ1N3aXRjaF09XCJmaWVsZC52YWx1ZS5jb250cm9sVHlwZVwiPlxyXG4gICAgPGFwcC1tdi10ZXh0Ym94IGNsYXNzPVwiY29sXCIgKm5nU3dpdGNoQ2FzZT1cIidJbnB1dCdcIiBbZmllbGRdPVwiZm9ybVtmaWVsZC5rZXldXCIgW2Zvcm1EYXRhXT1cImZvcm1EYXRhXCI+PC9hcHAtbXYtdGV4dGJveD5cclxuICAgIDxhcHAtbXYtdGV4dGFyZWEgY2xhc3M9XCJjb2xcIiAqbmdTd2l0Y2hDYXNlPVwiJ1RleHRhcmVhJ1wiIFtmaWVsZF09XCJmb3JtW2ZpZWxkLmtleV1cIiBbZm9ybURhdGFdPVwiZm9ybURhdGFcIj48L2FwcC1tdi10ZXh0YXJlYT5cclxuICAgIDxhcHAtbXYtZHJvcGRvd24gY2xhc3M9XCJjb2xcIiAqbmdTd2l0Y2hDYXNlPVwiJ0Ryb3Bkb3duJ1wiIFtmaWVsZF09XCJmb3JtW2ZpZWxkLmtleV1cIiBbZm9ybURhdGFdPVwiZm9ybURhdGFcIj48L2FwcC1tdi1kcm9wZG93bj5cclxuICA8L2Rpdj5cclxuPC9tYXQtY2FyZD5cclxuIl19